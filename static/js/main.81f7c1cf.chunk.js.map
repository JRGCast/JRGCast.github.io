{"version":3,"sources":["components/NavBar.js","components/Loading.js","Routes/routes.js","App.js","reportWebVitals.js","index.js"],"names":["NavBar","pathNText","path","innerText","className","map","to","Loading","About","lazy","Home","Projects","Routes","Suspense","fallback","exact","component","App","useState","joke","setJoke","randomJokeFetch","a","fetch","headers","Accept","feching","json","style","paddingTop","onClick","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"sTAqBeA,EAnBA,WACb,IAAMC,EAAY,CAChB,CAAEC,KAAM,IAAKC,UAAW,QACxB,CAAED,KAAM,SAAUC,UAAW,aAC7B,CAAED,KAAM,YAAaC,UAAW,kBAQlC,OACE,oBAAIC,UAAU,iBAAd,SARuBH,EAAUI,KAAI,YAA0B,IAAvBH,EAAsB,EAAtBA,KAAMC,EAAgB,EAAhBA,UAC9C,OACE,6BACE,cAAC,IAAD,CAASG,GAAKJ,EAAOE,UAAU,cAA/B,SAA+CD,Y,OCFxCI,G,MAPC,WACd,OACE,sBAAKH,UAAU,wBAAf,0BACE,qBAAKA,UAAU,qBCDfI,EAAQC,gBAAK,kBAAM,gCACnBC,EAAOD,gBAAK,kBAAM,gCAClBE,EAAWF,gBAAK,kBAAM,gCAebG,EAZA,WACb,OACE,cAAC,IAAMC,SAAP,CAAgBC,SAAW,cAAC,EAAD,IAA3B,SACE,eAAC,IAAD,WACE,cAAC,IAAD,CAAOC,OAAK,EAACb,KAAK,IAAIc,UAAYN,IAClC,cAAC,IAAD,CAAOR,KAAK,SAASc,UAAYR,IACjC,cAAC,IAAD,CAAON,KAAK,YAAYc,UAAYL,UCgB7BM,MAzBf,WAEE,MAAwBC,mBAAS,IAAjC,mBAAOC,EAAP,KAAaC,EAAb,KACMC,EAAe,uCAAG,8BAAAC,EAAA,sEACAC,MAAM,8BAA+B,CACzDC,QAAS,CACPC,OAAQ,sBAHU,cAChBC,EADgB,gBAMHA,EAAQC,OANL,OAMhBA,EANgB,OAOtBP,EAAQO,EAAKR,MAPS,2CAAH,qDASrB,OACE,sBAAKf,UAAU,MAAf,UACE,8BACE,cAAC,EAAD,MAEF,0BAASwB,MAAQ,CAAEC,WAAY,QAA/B,UACE,yBAAQC,QAAU,kBAAMT,KAAxB,oBAAqDF,KACrD,cAAC,EAAD,WCZOY,G,MAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,QCAdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,IAAD,UACE,cAAC,EAAD,QAGJC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.81f7c1cf.chunk.js","sourcesContent":["import { NavLink } from \"react-router-dom\";\nimport './NavBar.css';\nconst NavBar = () => {\n  const pathNText = [\n    { path: '/', innerText: 'Home' },\n    { path: '/about', innerText: 'Sobre mim' },\n    { path: '/projects', innerText: 'Meus Projetos' }];\n  const navLinkGen = () => pathNText.map(({ path, innerText }) => {\n    return (\n      <li>\n        <NavLink to={ path } className='NavBar-link'>{ innerText }</NavLink>\n      </li>\n    );\n  });\n  return (\n    <ul className='NavBar-display'>\n      { navLinkGen() }\n    </ul>\n  );\n};\n\nexport default NavBar;\n","import './Loading.css';\nconst Loading = () => {\n  return (\n    <div className='Loading-bar-container'>Carregando...\n      <div className='Loading-bar'></div>\n    </div>);\n};\n\nexport default Loading;\n","import React, { lazy } from \"react\";\nimport { Route, Switch } from \"react-router-dom\";\nimport Loading from \"../components/Loading\";\nconst About = lazy(() => import(\"../pages/About\"));\nconst Home = lazy(() => import(\"../pages/Home\"));\nconst Projects = lazy(() => import(\"../pages/Projects\"));\n\n\nconst Routes = () => {\n  return (\n    <React.Suspense fallback={ <Loading /> }>\n      <Switch>\n        <Route exact path='/' component={ Home } />\n        <Route path='/about' component={ About } />\n        <Route path='/projects' component={ Projects } />\n      </Switch>\n    </React.Suspense>\n  );\n};\n\nexport default Routes;\n","import React, { useState } from 'react';\nimport './App.css';\nimport NavBar from './components/NavBar';\nimport Routes from './Routes/routes';\n\nfunction App() {\n\n  const [joke, setJoke] = useState('');\n  const randomJokeFetch = async () => {\n    const feching = await fetch('https://icanhazdadjoke.com/', {\n      headers: {\n        Accept: 'application/json'\n      }\n    });\n    const json = await feching.json();\n    setJoke(json.joke);\n  };\n  return (\n    <div className=\"App\">\n      <nav >\n        <NavBar />\n      </nav>\n      <section style={ { paddingTop: '40px' } }>\n        <button onClick={ () => randomJokeFetch() }>Piada: { joke }</button>\n        <Routes />\n      </section>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\nimport App from './App';\nimport './index.css';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}