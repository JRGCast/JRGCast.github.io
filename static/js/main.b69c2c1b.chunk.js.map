{"version":3,"sources":["components/NavBar.js","pages/About.js","pages/Home.js","Routes/routes.js","App.js","reportWebVitals.js","index.js"],"names":["NavBar","navLinkGen","to","text","className","About","Home","Routes","exact","path","component","App","useState","joke","setJoke","randomJokeFetch","a","fetch","headers","Accept","feching","json","style","paddingTop","onClick","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"iSAgBeA,EAdA,WACb,IAAMC,EAAa,SAACC,EAAIC,GAAL,OAAc,cAAC,IAAD,CAASD,GAAKA,EAAKE,UAAU,cAA7B,SAA6CD,KAC9E,OACE,qBAAIC,UAAU,iBAAd,UACE,6BACIH,EAAW,IAAK,UAEpB,6BACIA,EAAW,SAAU,e,OCNhBI,EAJD,WACZ,OAAQ,4CCGKC,EAJF,WACX,OAAQ,uCCaKC,EATA,WACb,OACE,eAAC,IAAD,WACE,cAAC,IAAD,CAAOC,OAAK,EAACC,KAAK,IAAIC,UAAYJ,IAClC,cAAC,IAAD,CAAOG,KAAK,SAASC,UAAYL,QCoBxBM,MAxBf,WACE,MAAwBC,mBAAS,IAAjC,mBAAOC,EAAP,KAAaC,EAAb,KACMC,EAAe,uCAAG,8BAAAC,EAAA,sEACAC,MAAM,8BAA+B,CACzDC,QAAS,CACPC,OAAQ,sBAHU,cAChBC,EADgB,gBAMHA,EAAQC,OANL,OAMhBA,EANgB,OAOtBP,EAAQO,EAAKR,MAPS,2CAAH,qDASrB,OACE,sBAAKT,UAAU,MAAf,UACE,8BACE,cAAC,EAAD,MAEF,0BAASkB,MAAQ,CAAEC,WAAY,QAA/B,UACE,yBAAQC,QAAU,kBAAMT,KAAxB,2BAA4DF,KAC5D,cAAC,EAAD,WCXOY,G,MAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,QCAdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,IAAD,UACE,cAAC,EAAD,QAGJC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.b69c2c1b.chunk.js","sourcesContent":["import { NavLink } from \"react-router-dom\";\nimport './NavBar.css';\nconst NavBar = () => {\n  const navLinkGen = (to, text) => <NavLink to={ to } className='NavBar-link'>{ text }</NavLink>;\n  return (\n    <ul className='NavBar-display'>\n      <li>\n        { navLinkGen('/', 'Home') }\n      </li>\n      <li>\n        { navLinkGen('/about', 'About') }\n      </li>\n    </ul>\n  );\n};\n\nexport default NavBar;\n","const About = () => {\n  return (<h2>Sobre Mim</h2>);\n};\n\nexport default About;\n","const Home = () => {\n  return (<h1>HOME</h1>);\n};\n\nexport default Home;\n","import { Route, Switch } from \"react-router-dom\";\nimport About from \"../pages/About\";\nimport Home from \"../pages/Home\";\n\n\nconst Routes = () => {\n  return (\n    <Switch>\n      <Route exact path='/' component={ Home } />\n      <Route path='/about' component={ About } />\n    </Switch>\n  );\n};\n\nexport default Routes;\n","import { useState } from 'react';\nimport './App.css';\nimport NavBar from './components/NavBar';\nimport Routes from './Routes/routes';\n\nfunction App() {\n  const [joke, setJoke] = useState('');\n  const randomJokeFetch = async () => {\n    const feching = await fetch('https://icanhazdadjoke.com/', {\n      headers: {\n        Accept: 'application/json'\n      }\n    });\n    const json = await feching.json();\n    setJoke(json.joke);\n  };\n  return (\n    <div className=\"App\">\n      <nav >\n        <NavBar />\n      </nav>\n      <section style={ { paddingTop: '40px' } }>\n        <button onClick={ () => randomJokeFetch() }>Piada do dia: { joke }</button>\n        <Routes />\n      </section>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\nimport App from './App';\nimport './index.css';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}